@use "sass:math";
/* sr-only */
@mixin sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

@mixin unit($property, $values) {
  $expect: 0, auto, left, right, top, bottom, center, !important;

  // $px: ();
  $rem: ();

  @each $value in $values {
    @if index($expect, $value) {
      // $px: append($px, $value);
      $rem: append($rem, $value);
    } @else {
      $val: parseInt($value);
      // $px: append($px, $value);
      $rem: append($rem, math.div($val , $base-font-size) + rem);
    }
  }

  @if index('!important', $values) {
    // #{$property}: $px + '!important';
    #{$property}: $rem + '!important';
  } @else{
    // #{$property}: $px;
    #{$property}: $rem;
  }
}

@mixin set-padding($dimension...) {
  padding: set-space($dimension);
}
@mixin set-margin($dimension...) {
  margin: set-space($dimension);
}
//@include fontSize(10)
@mixin font-size($dimension) {
  font-size: set-size($dimension);
}
//@include fontSize(10)
@mixin font-color($dimension) {
  color: $dimension;
}
//@include before_left_line
@mixin before_left_line($color: #bebebe, $height: 100%) {
  &::before {
    content: "";
    display: block;
    position: absolute;
    left: 0;
    top: 50%;
    width: 1px;
    height: $height;
    margin-top: -$height/2;
    background-color: $color;
    @content;
  }
}
//@include after_clear_both
@mixin after_clear_both {
  &::after {
    content: "";
    clear: both;
    display: table;
  }
}
//@include breakpoint{}
@mixin md-359 {
  @media (max-width: 359px) {
    @content;
  }
}
@mixin md-374 {
  @media (max-width: 374px) {
    @content;
  }
}
@mixin md-767 {
  @media (max-width: 767px) {
    @content;
  }
}
@mixin md-1023 {
  @media (max-width: 1023px) {
    @content;
  }
}
@mixin md-1239 {
  @media (max-width: 1239px) {
    @content;
  }
}
@mixin md-1359 {
  @media (max-width: 1359px) {
    @content;
  }
}
@mixin md-1599 {
  @media (max-width: 1599px) {
    @content;
  }
}
@mixin md-1919 {
  @media (max-width: 1919px) {
    @content;
  }
}
@mixin md-2559 {
  @media (max-width: 2559px) {
    @content;
  }
}
/* cont-fluid */
@mixin cont-fluid($type: "content") {
  @if $type == "header" {
    max-width: $max-header-width;
  } @else if $type == "footer" {
    max-width: $max-footer-width;
  } @else {
    max-width: $max-content-width;
  }

  margin: 0 auto;
  box-sizing: content-box;
  padding-left: set-size(140);
  padding-right: set-size(140);

  @include md-1919 {
    padding-left: set-size(120);
    padding-right: set-size(120);
  }
  @include md-1599 {
    padding-left: set-size(100);
    padding-right: set-size(100);
  }
  @include md-1359 {
    padding-left: set-size(76);
    padding-right: set-size(76);
  }
  @include md-1023 {
    padding-left: set-size(58);
    padding-right: set-size(58);
  }
  @include md-767 {
    padding-left: set-size(30);
    padding-right: set-size(30);
  }
}
@mixin ico-list {
  &::before {
    content: "";
    display: inline-block;
    width: 4px;
    height: 4px;
    margin-right: 8px;
    border-radius: 50%;
    vertical-align: top;
    vertical-align: 2px;
    background-color: $list-ico-color-primary;
  }
}
@mixin ico-father {
  &::before {
    content: "F";
    display: inline-block;
    width: set-size(20);
    height: set-size(20);
    @include set-margin(0, 10, 0, 0);
    text-align: center;
    vertical-align: middle;
    @include font-color($font-color-light);
    background-color: $ico-father-bg;
  }
}
@mixin ico-mother {
  &::before {
    content: "M";
    display: inline-block;
    width: set-size(20);
    height: set-size(20);
    @include set-margin(0, 10, 0, 0);
    text-align: center;
    vertical-align: middle;
    @include font-color($font-color-light);
    background-color: $ico-mother-bg;
  }
}
